// Finals.QuadraticEquation.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cmath>

int myRoot(double, double, double, double&, double&);

int main()
{
    setlocale(LC_ALL, "rus");
    double a, b, c;
    double firstRoot, secondRoot;

    // Запрос коэффицентов
    std::cout << "Введите три коэффицента уравнения (a, b, c)." << std::endl;
    std::cout << "Введите первый коэффицент (не равен нулю): " << std::endl;
    std::cin >> a;
    std::cout << "Введите второй коэффицент: " << std::endl;
    std::cin >> b;
    std::cout << "Введите третий коэффицент: " << std::endl;
    std::cin >> c;

    // Вызов функции вычисления корней уравнения
    double result = myRoot(a, b, c, firstRoot, secondRoot);

    // Вывод соответствующего результата
    if (result == 1)                                                            // В уравнении два разных корня
        std::cout << "Корни уравнения с коэффициентами a = "
        << a << ", b = " << b << ", c = " << c 
        << " равны: x1 = " << firstRoot << ", x2 = " << secondRoot << std::endl;
    else if (result == 0)                                                       // В уравнении два одинаковых корня
        std::cout << "Корень уравнения с коэффициентами a = "
        << a << ", b = " << b << ", c = " << c 
        << " один: x1 = x2 = " << firstRoot << std::endl;
    else                                                                        // В уравнении корней нет
        std::cout << "Корней уравнения с коэффициентами a = "
        << a << ", b = " << b << ", c = " << c << " нет.";
}

int myRoot(double a, double b, double c, double &x1, double &x2)
{
    double discriminant = pow(b, 2) - 4 * a * c;

    // Вычисление корней уравнения, которые, исходя из значения дискриминанта,
    // имеют разное значение,
    // и возвращение соответствующего значения флага
    if (discriminant > 0)
    {
        x1 = (-b + sqrt(discriminant)) / (2 * a);
        x2 = (-b - sqrt(discriminant)) / (2 * a);
        return 1;
    }

    // Вычисление корней уравнения, которые, исходя из значения дискриминанта,
    // равны,
    // и возвращение соответствующего значения флага
    else if (discriminant == 0)
    {
        x1 = -(b / (2 * a));
        x2 = x1;
        return 0;
    }

    // Возвращение значения флага, обозначающего, что в этом уравнении,
    // исходя из значения дискриминанта,
    // корней нет
    else
    {
        x1 = x2 = 0;
        return -1;
    }
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
